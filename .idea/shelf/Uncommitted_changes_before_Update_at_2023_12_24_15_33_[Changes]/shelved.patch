Index: src/main/java/com/example/webproject/controller/admin/AddAcount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.webproject.controller.admin;\n\nimport com.example.webproject.model.User;\nimport com.example.webproject.service.Xu.Admin.AdminActionImpl;\nimport jakarta.servlet.*;\nimport jakarta.servlet.http.*;\nimport jakarta.servlet.annotation.*;\n\nimport java.io.IOException;\n\n@WebServlet(name = \"AddAcount\", value = \"/AddAcount\")\npublic class AddAcount extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String name = request.getParameter(\"name\");\n        String email = request.getParameter(\"email\");\n        String role = request.getParameter(\"role\");\n        AdminActionImpl adminAction = new AdminActionImpl();\n        User user = new User(name,\"123456\",email,role);\n        adminAction.addAccount(user);\n        HttpSession session = request.getSession();\n        session.setAttribute(\"users\",adminAction.getAllAccount());\n        request.getRequestDispatcher(\"admin_account_management.jsp\").forward(request,response);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/webproject/controller/admin/AddAcount.java b/src/main/java/com/example/webproject/controller/admin/AddAcount.java
--- a/src/main/java/com/example/webproject/controller/admin/AddAcount.java	(revision 399fff746cbdba850e2ab207896c7cedf914c030)
+++ b/src/main/java/com/example/webproject/controller/admin/AddAcount.java	(date 1703389638353)
@@ -1,7 +1,7 @@
 package com.example.webproject.controller.admin;
 
 import com.example.webproject.model.User;
-import com.example.webproject.service.Xu.Admin.AdminActionImpl;
+//import com.example.webproject.service.Xu.Admin.AdminActionImpl;
 import jakarta.servlet.*;
 import jakarta.servlet.http.*;
 import jakarta.servlet.annotation.*;
@@ -20,11 +20,11 @@
         String name = request.getParameter("name");
         String email = request.getParameter("email");
         String role = request.getParameter("role");
-        AdminActionImpl adminAction = new AdminActionImpl();
+//        AdminActionImpl adminAction = new AdminActionImpl();
         User user = new User(name,"123456",email,role);
-        adminAction.addAccount(user);
+//        adminAction.addAccount(user);
         HttpSession session = request.getSession();
-        session.setAttribute("users",adminAction.getAllAccount());
+//        session.setAttribute("users",adminAction.getAllAccount());
         request.getRequestDispatcher("admin_account_management.jsp").forward(request,response);
     }
 }
\ No newline at end of file
Index: src/main/java/com/example/webproject/service/Xu/Admin/AdminActionImpl.java
===================================================================
diff --git a/src/main/java/com/example/webproject/service/Xu/Admin/AdminActionImpl.java b/src/main/java/com/example/webproject/service/Xu/Admin/AdminActionImpl.java
deleted file mode 100644
--- a/src/main/java/com/example/webproject/service/Xu/Admin/AdminActionImpl.java	(revision 399fff746cbdba850e2ab207896c7cedf914c030)
+++ /dev/null	(revision 399fff746cbdba850e2ab207896c7cedf914c030)
@@ -1,249 +0,0 @@
-package com.example.webproject.service.Xu.Admin;
-
-import com.example.webproject.dao.*;
-import com.example.webproject.model.*;
-
-import java.sql.SQLException;
-import java.util.List;
-
-/**
- * 使用说明：
- * 1.实例化，会自动调用dao层接口，对dao层进行实例化
- * 2.使用封装类xxxEncapsulation将传入的对象封装
- * 3.传入对应操作的类（例如editCanteen(canteen,canteenModifyed)
- * 4.反馈操作结果
- */
-public class AdminActionImpl implements AdminActions{
-    UserDAO userDAO;
-    CanteenDAO canteenDAO;
-    ReviewDAO reviewDAO;
-    DishDAO dishDAO;
-    PostDAO postDAO;
-    @Override
-    public List<User> getAllAccount() {
-        return userDAO.getAllUsers();
-    }
-    public AdminActionImpl(){
-        this.userDAO = new UserDAO();
-        this.canteenDAO = new CanteenDAO();
-        this.reviewDAO = new ReviewDAO();
-        this.dishDAO = new DishDAO();
-        this.postDAO = new PostDAO();
-    }
-
-    public Canteen getCanteen(int canteenID){
-        try {
-            return canteenDAO.getCanteenByID(canteenID);
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public List<Canteen> getAllCanteen(){
-        try {
-            return canteenDAO.getAllCanteens();
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param canteen 新的食堂信息
-     */
-    @Override
-    public void addCanteen(Canteen canteen) {
-        try{
-            canteenDAO.addCanteen(canteen);
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param canteen 要删除的餐厅信息
-     */
-    @Override
-    public void deleteCanteen(Canteen canteen) {
-        try{
-            canteenDAO.deleteCanteen(canteen.getCanteenID());
-        }catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param newCanteen 新的餐厅信息
-     */
-    @Override
-    public void editCanteen(Canteen newCanteen) {
-        try{
-            canteenDAO.updateCanteen(newCanteen);
-        }catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-    /**
-     * @param userID
-     * @return
-     */
-    @Override
-    public User getAccount(int userID) {
-        return userDAO.getUserByID(userID);
-    }
-
-    /**
-     * @param user 新添加的用户
-     */
-    @Override
-    public void addAccount(User user) {
-        try{
-            userDAO.addUser(user);
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param username 用户名
-     * @param email    邮箱
-     * @param role     角色
-     */
-    @Override
-    public void editAccount(String username, String email, String role) {
-        try{
-            userDAO.updateUser(username,email,role);
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param user 需要删除的用户
-     */
-    @Override
-    public void deleteAccount(User user) {
-        try{
-            userDAO.deleteUser(user.getUserName());
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param reviewID 需要删除的评价
-     */
-    @Override
-    public void deleteReview(int reviewID) {
-        try{
-            reviewDAO.deleteReview(reviewID); //todo:创建postDao类
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param newReview 新评论内容
-     */
-    @Override
-    public void editReview(Review newReview) {
-        try{
-            reviewDAO.updateReview(newReview);
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-
-    /**
-     * @param postID 需要删除的评论
-     */
-    @Override
-    public void deletePost(int postID) {
-        try{
-            postDAO.deletePost(postID);
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-
-    @Override
-    public void editPost(int id,String title,String content,String username,String createDate) {
-        try{
-            int userid = getAccountByUserName(username).getUserID();
-            Post newPost = new Post(
-                    id,
-                    title,
-                    content,
-                    userid,
-                    createDate
-            );
-            postDAO.editPost(newPost);
-        }catch (SQLException e){
-            throw new RuntimeException(e);
-        }
-    }
-    /**
-     * @param canteenID 餐厅编号
-     * @param name      餐厅名
-     * @param location  餐厅位置
-     * @param openTime  时间
-     * @param managerName 管理员编号
-     * @return
-     */
-    @Override
-    public Canteen canteenEncapsulation(int canteenID, String name, String location, String openTime, String managerName,String notice) {
-        int managerID = userDAO.getUserByUsername(managerName).getUserID();
-        return new Canteen(canteenID,name,location,openTime,managerID,notice);
-    }
-
-    @Override
-    public Review getReview(int reviewid) {
-        try {
-            return reviewDAO.getReviewByReviewID(reviewid);
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-    public Dish getDishByID(int dishID) {
-        try {
-            return dishDAO.getDish(dishID);
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public User getAccountByUserName(String user) {
-       return userDAO.getUserByUsername(user);
-    }
-
-    public int getDishIDByName(String dish) {
-        try {
-            return dishDAO.getDishIDByName(dish);
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public List<Review> getAllReview() {
-        try {
-            return reviewDAO.getAllReviews();
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public Post getPost(int id) {
-        try {
-            return postDAO.getPost(id);
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public List<Post> getAllPosts() {
-        try {
-            return postDAO.getAllPosts();
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-}
Index: src/main/java/com/example/webproject/service/Xu/Admin/AdminActions.java
===================================================================
diff --git a/src/main/java/com/example/webproject/service/Xu/Admin/AdminActions.java b/src/main/java/com/example/webproject/service/Xu/Admin/AdminActions.java
deleted file mode 100644
--- a/src/main/java/com/example/webproject/service/Xu/Admin/AdminActions.java	(revision 399fff746cbdba850e2ab207896c7cedf914c030)
+++ /dev/null	(revision 399fff746cbdba850e2ab207896c7cedf914c030)
@@ -1,123 +0,0 @@
-package com.example.webproject.service.Xu.Admin;
-
-import com.example.webproject.model.Canteen;
-import com.example.webproject.model.Review;
-import com.example.webproject.model.User;
-
-import java.util.List;
-
-public interface AdminActions {
-   //todo:细化对异常的处理
-   /**
-    * 添加餐厅
-    *
-    * @param canteen 新的食堂信息
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void addCanteen(Canteen canteen);
-
-    List<User> getAllAccount();
-   /**
-    * 删除餐厅
-    *
-    * @param canteen 要删除的餐厅信息
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void deleteCanteen(Canteen canteen);
-   /**
-    * 更改餐厅信息
-    *
-    * @param newCanteen 新的餐厅信息
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void editCanteen(Canteen newCanteen);
-
-   /**
-    * 用用户id获取用户
-    * @param
-    * @return user
-    * @author ChiMi
-    * #Date 2023/12/22
-    */
-   User getAccount(int userID);
-
-   /**
-    * 用户注册时会用到的添加用户
-    *
-    * @param user 新添加的用户
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void addAccount(User user);
-   /**
-    * 修改用户，系统管理员可用
-    *
-    * @param username 新用户
-    * @param email
-    * @param role
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void editAccount(String username, String email, String role);
-
-   /**
-    * 删除指定用户
-    *
-    * @param user 需要删除的用户
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void deleteAccount(User user);
-   /**
-    * 删除指定评价
-    *
-    * @param reviewID 需要删除的评价
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-    void deleteReview(int reviewID);
-
-    /**
-     * 删除指定评价
-     *
-     * @param newReview 新评论内容
-     * @author ChiMi
-     * #Date 2023/12/21
-     */
-   void editReview(Review newReview);
-   /**
-    * Description
-    *
-    * @param postID 需要删除的评论
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void deletePost(int postID);
-   /**
-    * Description
-    *
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   void editPost(int id,String title,String content,String username,String createDate);
-   /**
-    * 将食堂信息封装为食堂实体类
-    * @param canteenID 餐厅编号
-    * @param name 餐厅名
-    * @param location 餐厅位置
-    * @param openTime 时间
-    * @param managerName 管理员编号
-    * @param notice
-    * @return 餐厅实体类
-    * @author ChiMi
-    * #Date 2023/12/21
-    */
-   Canteen canteenEncapsulation(int canteenID, String name, String location, String openTime, String managerName, String notice);
-
-   Review getReview(int reviewid);
-
-    //实体封装类改为用实体类构造方法实现，除canteen封装需要用到managerid和name的转换所以保留以外，其余全部移除
- }
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"dataSourceStorageLocal\" created-in=\"IU-232.9921.47\">\n    <data-source name=\"WebWeb\" uuid=\"195ff921-4956-490e-9219-906d3b1e98c8\">\n      <database-info product=\"MySQL\" version=\"8.0.35-0ubuntu0.22.04.1\" jdbc-version=\"4.2\" driver-name=\"MySQL Connector/J\" driver-version=\"mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)\" dbms=\"MYSQL\" exact-version=\"8.0.35\" exact-driver-version=\"8.0\">\n        <extra-name-characters>#@</extra-name-characters>\n        <identifier-quote-string>`</identifier-quote-string>\n      </database-info>\n      <case-sensitivity plain-identifiers=\"exact\" quoted-identifiers=\"exact\" />\n      <secret-storage>master_key</secret-storage>\n      <user-name>webteam</user-name>\n      <schema-mapping>\n        <introspection-scope>\n          <node kind=\"schema\" qname=\"web_restaurant\" />\n        </introspection-scope>\n      </schema-mapping>\n    </data-source>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
--- a/.idea/dataSources.local.xml	(revision 399fff746cbdba850e2ab207896c7cedf914c030)
+++ b/.idea/dataSources.local.xml	(date 1703389729737)
@@ -1,10 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="dataSourceStorageLocal" created-in="IU-232.9921.47">
+  <component name="dataSourceStorageLocal" created-in="IU-232.10227.8">
     <data-source name="WebWeb" uuid="195ff921-4956-490e-9219-906d3b1e98c8">
       <database-info product="MySQL" version="8.0.35-0ubuntu0.22.04.1" jdbc-version="4.2" driver-name="MySQL Connector/J" driver-version="mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)" dbms="MYSQL" exact-version="8.0.35" exact-driver-version="8.0">
         <extra-name-characters>#@</extra-name-characters>
         <identifier-quote-string>`</identifier-quote-string>
+        <jdbc-catalog-is-schema>true</jdbc-catalog-is-schema>
       </database-info>
       <case-sensitivity plain-identifiers="exact" quoted-identifiers="exact" />
       <secret-storage>master_key</secret-storage>
